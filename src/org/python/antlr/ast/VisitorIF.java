// Autogenerated AST node
package org.python.antlr.ast;

public interface VisitorIF<R> {
    R visitModule(Module node) throws Exception;
    R visitInteractive(Interactive node) throws Exception;
    R visitExpression(Expression node) throws Exception;
    R visitSuite(Suite node) throws Exception;
    R visitFunctionDef(FunctionDef node) throws Exception;
    R visitClassDef(ClassDef node) throws Exception;
    R visitReturn(Return node) throws Exception;
    R visitDelete(Delete node) throws Exception;
    R visitAssign(Assign node) throws Exception;
    R visitAugAssign(AugAssign node) throws Exception;
    R visitPrint(Print node) throws Exception;
    R visitFor(For node) throws Exception;
    R visitWhile(While node) throws Exception;
    R visitIf(If node) throws Exception;
    R visitWith(With node) throws Exception;
    R visitRaise(Raise node) throws Exception;
    R visitTryExcept(TryExcept node) throws Exception;
    R visitTryFinally(TryFinally node) throws Exception;
    R visitAssert(Assert node) throws Exception;
    R visitImport(Import node) throws Exception;
    R visitImportFrom(ImportFrom node) throws Exception;
    R visitExec(Exec node) throws Exception;
    R visitGlobal(Global node) throws Exception;
    R visitExpr(Expr node) throws Exception;
    R visitPass(Pass node) throws Exception;
    R visitBreak(Break node) throws Exception;
    R visitContinue(Continue node) throws Exception;
    R visitBoolOp(BoolOp node) throws Exception;
    R visitBinOp(BinOp node) throws Exception;
    R visitUnaryOp(UnaryOp node) throws Exception;
    R visitLambda(Lambda node) throws Exception;
    R visitIfExp(IfExp node) throws Exception;
    R visitDict(Dict node) throws Exception;
    R visitSet(Set node) throws Exception;
    R visitListComp(ListComp node) throws Exception;
    R visitSetComp(SetComp node) throws Exception;
    R visitDictComp(DictComp node) throws Exception;
    R visitGeneratorExp(GeneratorExp node) throws Exception;
    R visitYield(Yield node) throws Exception;
    R visitCompare(Compare node) throws Exception;
    R visitCall(Call node) throws Exception;
    R visitRepr(Repr node) throws Exception;
    R visitNum(Num node) throws Exception;
    R visitStr(Str node) throws Exception;
    R visitAttribute(Attribute node) throws Exception;
    R visitSubscript(Subscript node) throws Exception;
    R visitName(Name node) throws Exception;
    R visitList(List node) throws Exception;
    R visitTuple(Tuple node) throws Exception;
    R visitEllipsis(Ellipsis node) throws Exception;
    R visitSlice(Slice node) throws Exception;
    R visitExtSlice(ExtSlice node) throws Exception;
    R visitIndex(Index node) throws Exception;
    R visitExceptHandler(ExceptHandler node) throws Exception;
}
